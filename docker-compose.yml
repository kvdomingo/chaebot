version: '3.8'

services:
  api:
    build:
      context: .
      target: api-dev
      dockerfile: Dockerfile.dev
    image: kvdomingo/chaebot-api:latest
    env_file: .env
    volumes:
      - .:/bot

  bot:
    build:
      context: .
      target: dev
      dockerfile: Dockerfile.dev
    image: kvdomingo/chaebot-dev:latest
    environment:
      CLOUDSDK_CONFIG: /opt/gcloud
    env_file: .env
    volumes:
      - .:/bot
      - ${HOME}/.config/gcloud:/opt/gcloud
    restart: unless-stopped
    depends_on:
      - api

  docs:
    image: oven/bun:1.1-alpine
    environment:
      NODE_ENV: development
    working_dir: /app
    entrypoint:
      - /bin/sh
      - "-c"
      - "bun install && exec bun run dev"
    volumes:
      - ./docs:/app

  proxy:
    image: bitnami/nginx:1.27.0-debian-12-r6
    environment:
      - NGINX_HTTP_PORT_NUMBER=${HTTP_PORT}
    volumes:
      - ./proxy:/opt/bitnami/nginx/conf/server_blocks:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chaebot.rule=Host(`chaebot.localhost`)"
      - "traefik.http.routers.chaebot.entrypoints=http"
      - "traefik.http.routers.chaebot.middlewares=secured@file"
      - "traefik.docker.network=gateway"
      - "traefik.http.services.chaebot.loadbalancer.server.port=${HTTP_PORT}"
    restart: unless-stopped
    networks:
      - default
      - gateway

  postgres:
    image: bitnami/postgresql:13.15.0-debian-12-r19
    environment:
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - db-data:/bitnami/postgresql

networks:
  gateway:
    external: true

volumes:
  db-data:
